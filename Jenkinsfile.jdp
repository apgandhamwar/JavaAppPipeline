/* Pipeline */

pipeline {
  agent any

/* Dynamic variable assignment */

  parameters {
      choice (
          name: 'BuildType',
          choices:"SNAPSHOT\nRELEASE",
          description: "Choose the Build type"
      )
  }


  options { 
    // ansiColor('xterm') 
    disableConcurrentBuilds()
  }

  tools {
    jdk 'java-8'
    maven 'maven-3'
    }

  environment {
    NEXUS_FQDN     = 'ec2-15-206-189-141.ap-south-1.compute.amazonaws.com'
    NEXUS_PORT     = '8081'
    ARTIFACT_VERSION = '6.0.0-SNAPSHOT'
    JAVA_HOME      = "/usr/java/jdk1.8.0_191-amd64"
    MAVEN_HOME     = "/opt/maven"
    NEXUS_CREDS = credentials('nexus-repo')
 

  }

  stages {
    stage('clean & verify') {
      steps {
        script {
          withCredentials([usernamePassword(credentialsId: 'nexus-repo', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]){
          withMaven(globalMavenSettingsFilePath: 'C:/ProgramData/Jenkins/.jenkins/workspace/JavaAppPipeline/settings.xml', jdk: "java-8", maven: "maven-3") {
            sh "mvn -Drevision=${ARTIFACT_VERSION} -Dserver.username=${USERNAME} -Dserver.password=${PASSWORD} clean verify"
          }
        }
      }
    }
  }

  stage('deploy') {
      when {
          expression { params.BuildType == 'SNAPSHOT' }
      }
      steps {
        script {
          withCredentials([usernamePassword(credentialsId: 'nexus-repo', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]){
          withMaven(globalMavenSettingsFilePath: 'C:/ProgramData/Jenkins/.jenkins/workspace/JavaAppPipeline/settings.xml', jdk: "java-8", maven: "maven-3") {
            sh "mvn -Drevision=${ARTIFACT_VERSION} -Dserver.username=${USERNAME} -Dserver.password=${PASSWORD} clean deploy -X"
          }
        }
      }
    }
  }
  
  stage ('PostBuild') {
    steps {
       sh "export WAIT_FOR_ANALYSIS=true; C:/jfrog-integrations-master/sonarqube/artifactory/artifactory-sonar.sh true"
    }    
  }
  
  stage('release') {
      when {
          expression { params.BuildType == 'RELEASE' }
      }
      steps {
        script {
          withCredentials([usernamePassword(credentialsId: 'nexus-repo', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]){
          withMaven(globalMavenSettingsFilePath: 'settings.xml', jdk: "java-8", maven: "maven-3") {
            // sh "git checkout -f master"
            // sh "git pull"
               // sh '''
               // git config --global user.email "apgandhamwar@gmail.com"
                // git config --global user.name "apgandhamwar"
                // '''
            sh "mvn -Drevision=${ARTIFACT_VERSION} -Dserver.username=${USERNAME} -Dserver.password=${PASSWORD} release:clean release:prepare release:perform"
          }
        }
      }
    }
  }

//   stage('Update GIT') {
//     when {
//           expression { params.BuildType == 'RELEASE' }
//       }
//   steps {
//     script {
//       catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
//         withCredentials([usernamePassword(credentialsId: 'GitHub', passwordVariable: 'USERNAME', usernameVariable: 'PASSWORD')]) {
//             def encodedPassword = URLEncoder.encode("$PASSWORD",'UTF-8')
//             sh "git config user.email apgandhamwar@gmail.com"
//             sh "git config user.name apgandhamwar"
//             sh "git add ."
//             sh "git commit -m 'Triggered Build: ${ARTIFACT_VERSION}'"
//             sh "git push https://${USERNAME}:${encodedPassword}@github.com/${USERNAME}/JavaAppPipeline.git"
//         }
//       }
//     }
//   }
// }

}
}
